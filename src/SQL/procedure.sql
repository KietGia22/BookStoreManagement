set serveroutput on;
-------------------------INSERT, UPDATE, DELETE--------------------------------------------
--TAIKHOAN
CREATE OR REPLACE PROCEDURE ThemTK(dn TAIKHOAN.TENDN%TYPE, mk TAIKHOAN.MATKHAU%TYPE, hten TAIKHOAN.HOTEN%TYPE, ngsinh TAIKHOAN.NGAYSINH%TYPE,  dc TAIKHOAN.DIACHI%TYPE, sdt TAIKHOAN.SDT%TYPE, gmail TAIKHOAN.GMAIL%TYPE, cv TAIKHOAN.CHUCVU%TYPE, ngtao TAIKHOAN.NGAYTAOTAIKHOAN%TYPE, luong TAIKHOAN.LUONG%TYPE)
AS
BEGIN 
        INSERT INTO TAIKHOAN(MATK, TENDN, MATKHAU, HOTEN, NGAYSINH, DIACHI, SDT, GMAIL, NGAYTAOTAIKHOAN, CHUCVU, LUONG) VALUES (SQ_TK.NEXTVAL, dn, mk, hten, ngsinh, dc, sdt, gmail, ngtao, cv, luong);
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE SuaTK(mtk TAIKHOAN.MATK%TYPE, hten TAIKHOAN.HOTEN%TYPE, ngsinh TAIKHOAN.NGAYSINH%TYPE,  dc TAIKHOAN.DIACHI%TYPE, sdt TAIKHOAN.SDT%TYPE, gmail TAIKHOAN.GMAIL%TYPE, cv TAIKHOAN.CHUCVU%TYPE, luong TAIKHOAN.LUONG%TYPE)
AS
BEGIN 
       UPDATE TAIKHOAN
       SET HOTEN = hten,
       NGAYSINH = ngsinh,
       DIACHI = dc,
       SDT = sdt,
       GMAIL = gmail,
       CHUCVU = cv,
       LUONG = luong
       WHERE MATK = mtk;
       COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaTK(mtk TAIKHOAN.MATK%TYPE)
AS
BEGIN 
       DELETE FROM TAIKHOAN WHERE MATK = mtk;
       COMMIT;
END;
/

--KHACHHANG
CREATE OR REPLACE PROCEDURE ThemKH(hten KHACHHANG.HOTEN%TYPE, ngsinh KHACHHANG.NGAYSINH%TYPE,  dc KHACHHANG.DIACHI%TYPE, sdt KHACHHANG.SDT%TYPE, gtinh KHACHHANG.GIOITINH%TYPE,  cccd KHACHHANG.CCCD%TYPE)
AS
BEGIN 
        INSERT INTO KHACHHANG(MAKH, HOTEN, NGAYSINH, SDT, DIACHI, CCCD, GIOITINH) VALUES (SQ_KH.NEXTVAL, hten, ngsinh, sdt, dc, cccd , gtinh);
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE SuaKH(mkh KHACHHANG.MAKH%TYPE, hten KHACHHANG.HOTEN%TYPE, ngsinh KHACHHANG.NGAYSINH%TYPE,  dc KHACHHANG.DIACHI%TYPE, sdt KHACHHANG.SDT%TYPE, gtinh KHACHHANG.GIOITINH%TYPE, cccd KHACHHANG.CCCD%TYPE)
AS
BEGIN 
       UPDATE KHACHHANG
       SET HOTEN = hten,
       NGAYSINH = ngsinh,
       DIACHI = dc,
       SDT = sdt,
       CCCD = cccd,
       GIOITINH = gtinh
       WHERE MAKH = mkh;
       COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaKH(mkh KHACHHANG.MAKH%TYPE)
AS
BEGIN 
        DELETE FROM KHACHHANG WHERE MAKH = mkh;
        COMMIT;
END;
/

--SACH
CREATE OR REPLACE PROCEDURE ThemSACH(ts SACH.TENSACH%TYPE, tg SACH.TENTG%TYPE, nxb SACH.NXB%TYPE, mtl SACH.MATL%TYPE, sl SACH.SLHIENCO%TYPE, anh SACH.ANHSACH%TYPE,  gia SACH.GIATIEN%TYPE)
AS
BEGIN 
        INSERT INTO SACH(MASACH, TENSACH, TENTG, NXB, MATL, SLHIENCO, ANHSACH, GIATIEN) VALUES (SQ_S.NEXTVAL, ts, tg, nxB, mtl, sl, anh, gia);
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE SuaSACH(ms SACH.MASACH%TYPE,ts SACH.TENSACH%TYPE, tg SACH.TENTG%TYPE, nxb SACH.NXB%TYPE, mtl SACH.MATL%TYPE, sl SACH.SLHIENCO%TYPE, anh SACH.ANHSACH%TYPE,  gia SACH.GIATIEN%TYPE)
AS
BEGIN 
        UPDATE SACH
        SET TENSACH = ts,
         TENTG = tg,
        NXB = nxb,
        MATL = mtl,
        SLHIENCO = sl,
        ANHSACH = anh,
       GIATIEN  = gia
        WHERE MASACH = ms;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaSACH(ms SACH.MASACH%TYPE)
AS
BEGIN 
        DELETE FROM SACH WHERE MASACH = ms;
        COMMIT;
END;
/

--HOADON
CREATE OR REPLACE PROCEDURE ThemHD(mkh HOADON.MAKH%TYPE, mtk HOADON.MATK%TYPE)
AS 
BEGIN
       INSERT INTO HOADON(MAHD, MAKH, MATK) VALUES (SQ_HD.NEXTVAL, mkh, mtk);
       COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaHD(mhd HOADON.MAHD%TYPE)
AS 
BEGIN
       DELETE FROM HOADON
       WHERE MAHD = mhd;
       COMMIT;
END;
/
---PHIEUNHAPSACH
CREATE OR REPLACE PROCEDURE ThemPNS(npp PHIEUNHAPSACH.MANPP%TYPE, mtk PHIEUNHAPSACH.MATK%TYPE)
AS 
BEGIN
       INSERT INTO PHIEUNHAPSACH(MAPNS, MANPP, MATK) VALUES (SQ_PNS.NEXTVAL, npp, mtk);
       COMMIT;
END;
/

--NHAPHANPHOI
CREATE OR REPLACE PROCEDURE ThemNPP(tennpp NHAPHANPHOI.TENNPP%TYPE, dc NHAPHANPHOI.DIACHI%TYPE, sdt NHAPHANPHOI.SDT%TYPE)
AS
BEGIN 
        INSERT INTO NHAPHANPHOI(MANPP, TENNPP, DIACHI, SDT) VALUES (SQ_NPP.NEXTVAL, tennpp, dc, sdt);
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE SuaNPP(ma NHAPHANPHOI.MANPP%TYPE, tennpp NHAPHANPHOI.TENNPP%TYPE, dc NHAPHANPHOI.DIACHI%TYPE, sdt NHAPHANPHOI.SDT%TYPE)
AS
BEGIN 
        UPDATE NHAPHANPHOI
        SET TENNPP = tennpp,
        DIACHI = dc,
        SDT = sdt
        WHERE MANPP = ma;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaNPP(ma NHAPHANPHOI.MANPP%TYPE)
AS
BEGIN 
        DELETE FROM NHAPHANPHOI
        WHERE MANPP = ma;
        COMMIT;
END;
/
--THELOAI
CREATE OR REPLACE PROCEDURE ThemTL(tentl THELOAI.TENTHELOAI%TYPE)
AS
BEGIN 
        INSERT INTO THELOAI(MATL, TENTHELOAI) VALUES (SQ_TL.NEXTVAL, tentl);
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE SuaTL(mtl THELOAI.MATL%TYPE, tentl THELOAI.TENTHELOAI%TYPE)
AS
BEGIN 
        UPDATE THELOAI
        SET TENTHELOAI = tentl
        WHERE MATL = mtl;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE XoaTL(mtl THELOAI.MATL%TYPE)
AS
BEGIN 
        DELETE FROM THELOAI WHERE MATL = mtl;
        COMMIT;
END;
/

---CHI TIET HOA DON
CREATE OR REPLACE PROCEDURE ThemCTHD(mhd CTHD.MAHD%TYPE, ms CTHD.MASACH%TYPE, sl CTHD.SOLUONGMUATUNGCUONSACH%TYPE)
AS
BEGIN 
       INSERT INTO CTHD(MAHD, MASACH, SOLUONGMUATUNGCUONSACH) VALUES (mhd, ms, sl);
       COMMIT;
END;
/

--CHI TIET PHIEU NHAP
CREATE OR REPLACE PROCEDURE ThemCTPNSACH(mpns CTPNSACH.MAPNS%TYPE, ms CTPNSACH.MASACH%TYPE, sl CTPNSACH.SOLUONGNHAPTUNGCUONSACH%TYPE, gia CTPNSACH. GIASACHNHAP%TYPE)
AS
BEGIN 
       INSERT INTO CTPNSACH(MAPNS, MASACH,  SOLUONGNHAPTUNGCUONSACH,  GIASACHNHAP) VALUES (mpns, ms, sl, gia);
       COMMIT;
END;
/

--CHAM CONG
CREATE OR REPLACE PROCEDURE ThemCCONG(mtk CHAMCONG.MATK%TYPE)
AS
BEGIN
       INSERT INTO CHAMCONG(MATK) VALUES (mtk);
       COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE SUAKETTHUCCCong(mtk CHAMCONG.MATK%TYPE)
AS
    kt CHAMCONG.KETTHUC%TYPE;
BEGIN
    SELECT SYSDATE INTO kt FROM DUAL;
    
    UPDATE CHAMCONG
    SET KETTHUC = kt
    WHERE MATK = mtk
    AND TO_DATE(TO_CHAR(kt, 'DD-MM-YYYY'), 'DD-MM-YYYY') = TO_DATE(TO_CHAR(BATDAULAM, 'DD-MM-YYYY'), 'DD-MM-YYYY');
    COMMIT;
END;
/
---LUONG
CREATE OR REPLACE PROCEDURE ThemLUONGNV(month_out LUONG.THANG%TYPE, year_out LUONG.NAM%TYPE, mtk LUONG.MATK%TYPE)
AS
BEGIN
       INSERT INTO LUONG(THANG, NAM, MATK) VALUES (month_out, year_out, mtk);
       COMMIT;
END;




-----------------GET DU LIEU ------------------------
--TAIKHOAN
CREATE OR REPLACE PROCEDURE GETTCTK(out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM TAIKHOAN;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETTKTHEOMA(mtk TAIKHOAN.MATK%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM TAIKHOAN
        WHERE MATK = mtk;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETTKTHEOTEN(hten TAIKHOAN.HOTEN%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM TAIKHOAN
        WHERE HOTEN =  hten;
        COMMIT;
END;
/

--KHACH HANG
CREATE OR REPLACE PROCEDURE GETTCKH(out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM KHACHHANG;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETKHTHEOMA(mkh  KHACHHANG.MAKH%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM KHACHHANG
        WHERE MAKH = mkh;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETKHTHEOTEN(hten  KHACHHANG.HOTEN%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM KHACHHANG
        WHERE HOTEN =  hten;
        COMMIT;
END;
/

----SACH
CREATE OR REPLACE PROCEDURE GETTCSACH(out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT * FROM SACH;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETSACHTHEOMA(ms SACH.MASACH%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT SACH.*, THELOAI.* FROM SACH, THELOAI
        WHERE MASACH = ms
         AND SACH.MATL = THELOAI.MATL;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETSACHTHEOTEN(ts  SACH.TENSACH %TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT SACH.*, THELOAI.* FROM SACH, THELOAI
        WHERE TENSACH =  ts
        AND SACH.MATL = THELOAI.MATL;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETSACHTHEOHD (mhd CTHD.MAHD%TYPE,  out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
     OPEN out_cur FOR
     SELECT S.*, CT.*, TL.* FROM SACH S, CTHD CT, THELOAI TL
     WHERE S.MASACH = CT.MASACH
     AND S.MATL = TL.MATL
     AND CT.MAHD = mhd;
     COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETSACHTHEOPNS (mpns CTPNSACH.MAPNS%TYPE,  out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
     OPEN out_cur FOR
     SELECT * FROM SACH S, CTPNSACH CT
     WHERE S.MASACH = CT.MASACH
     AND CT.MAPNS = mpns;
     COMMIT;
END;
/
---THELOAI
CREATE OR REPLACE PROCEDURE GETTCTL(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM THELOAI;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETTLTHEOMA(mtl THELOAI.MATL%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM THELOAI
        WHERE MATL = mtl;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETTLTHEOTEN(ttl THELOAI.TENTHELOAI%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM THELOAI
        WHERE TENTHELOAI = ttl;
        COMMIT;
END;
/

---NHAPHANPHOI
CREATE OR REPLACE PROCEDURE GETTCNPP(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM NHAPHANPHOI;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETNPPTHEOMA(mnpp NHAPHANPHOI.MANPP%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM NHAPHANPHOI
        WHERE MANPP = mnpp;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETNPPTHEOTEN(tnpp NHAPHANPHOI.TENNPP%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM NHAPHANPHOI
        WHERE TENNPP = tnpp;
        COMMIT;
END;
/

--HOADON
CREATE OR REPLACE PROCEDURE GETTCHD(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM HOADON
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETHDTHEOMA (mhd HOADON.MAHD%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM HOADON
        WHERE MAHD = mhd;
        COMMIT;
END; 
/
CREATE OR REPLACE PROCEDURE GETTHANGHD(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT DISTINCT(EXTRACT(MONTH FROM NGAYTAOHD)) FROM HOADON;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETNAMHD(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT DISTINCT(EXTRACT(YEAR FROM NGAYTAOHD)) FROM HOADON;
        COMMIT;
END;
/

--PHIEUNHAPSACH
CREATE OR REPLACE PROCEDURE GETTCPNS(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT PNS.*, NPP.*, TK.* FROM PHIEUNHAPSACH PNS, NHAPHANPHOI NPP, TAIKHOAN TK
        WHERE PNS.MANPP = NPP.MANPP
        AND PNS.MATK = TK.MATK;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETPNSTHEOMA(mpns PHIEUNHAPSACH.MAPNS%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM PHIEUNHAPSACH
        WHERE MAPNS = mpns;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETPNSTHEONV(mtk PHIEUNHAPSACH.MATK%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM PHIEUNHAPSACH
        WHERE MATK = mtk;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETTHANGPNS(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT DISTINCT(EXTRACT(MONTH FROM NGAYNHAPSACH)) FROM PHIEUNHAPSACH;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETNAMPNS(out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT DISTINCT(EXTRACT(YEAR FROM NGAYNHAPSACH)) FROM PHIEUNHAPSACH;
        COMMIT;
END;
/

---LUONG
CREATE OR REPLACE PROCEDURE GETTCLUONG( out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM LUONG;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETLUONGTHEONV(mtk LUONG.MATK%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM LUONG
        WHERE MATK = mtk;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETLUONGTHEOTHANG(month_out LUONG.THANG%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM LUONG
        WHERE THANG = month_out;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETLUONGTHEONAM(year_out LUONG.NAM%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM LUONG
        WHERE NAM = year_out;
        COMMIT;
END;
/

--CHAMCONG
CREATE OR REPLACE PROCEDURE GETCHAMCONG( out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM CHAMCONG;
        COMMIT;
END;
/
--CHI TIET PHIEU NHAP
CREATE OR REPLACE PROCEDURE GETCTPNSACHTHEOMA(mpns CTPNSACH.MAPNS%TYPE, out_cur OUT SYS_REFCURSOR)
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM CTPNSACH
        WHERE SOLUONGNHAPTUNGCUONSACH > 0
        AND MAPNS = mpns;
        COMMIT;
END;
/

CREATE OR REPLACE PROCEDURE GET_DANG_NHAP(tendn TAIKHOAN.TENDN%TYPE, mk TAIKHOAN.MATKHAU%TYPE, out_cur OUT SYS_REFCURSOR) 
AS
BEGIN
       OPEN out_cur FOR 
        SELECT * FROM TAIKHOAN
        WHERE TENDN = tendn
        AND MATKHAU = mk;
        COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GET_TL_CHO_SACH(out_cur OUT SYS_REFCURSOR)
AS 
BEGIN 
      OPEN out_cur FOR
      SELECT S.*, TL.* FROM SACH S, THELOAI TL
      WHERE S.MATL = TL.MATL;
      COMMIT;
END;
/
CREATE OR REPLACE PROCEDURE GETMaHD(out_cur OUT SYS_REFCURSOR)
AS
BEGIN 
        OPEN out_cur FOR
        SELECT MAX(MAHD) FROM HOADON;
        COMMIT;
END;

   













